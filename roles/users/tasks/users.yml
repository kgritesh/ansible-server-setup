- name: Per-user group creation
  group: name='{{item.group | default(item.username)}}'
         gid='{{item.gid | default(omit)}}' state='present'
  with_flattened:
    - '{{default_users}}'
    - '{{group_users}}'
    - '{{host_users}}'
    - '{{extra_users}}'

  when: ((item.name is defined and item.name and item.name != 'root') and (item.state is undefined or (item.state is defined and item.state != 'absent')))
  tags: ['users','configuration']


- name: Create Default User Groups
  group: name='{{item}}' gid='{{item.gid | default(omit)}}'
  with_items: '{{user_default_groups}}'
  tags: ['users','configuration']


- name: Get list of available groups
  shell: 'getent group | cut -f1 -d:'
  register: users_register_groups
  changed_when: False

- name: User creation
  user: name='{{item.username}}'
        state='{{item.state | default("present")}}'
        group='{{item.group | default(item.username)}}'
        groups='{{(item.groups | intersect(users_register_groups.stdout_lines)) | join(",") if item.groups is defined else None}}'
        password='{{item.password | default(user_default_password_hash)}}'
        shell='{{item.shell if item.shell is defined else users_default_shell}}'
        comment='{{item.name}}'
        uid='{{item.uid | default(omit)}}'
        system='{{item.system | default(omit)}}'
        createhome='{{item.createhome | default(users_create_homedirs if users_create_homedirs is defined else omit)}}'
  with_flattened:
    - '{{default_users}}'
    - '{{group_users}}'
    - '{{host_users}}'
    - '{{extra_users}}'

  tags: ['users','configuration']


- name: Add Users to Sudoers
  action: lineinfile dest=/etc/sudoers regexp='{{item.username}} ALL'
          line='{{item.username}} ALL=(ALL)  ALL '
          state=present

  with_flattened:
    - '{{default_users}}'
    - '{{group_users}}'
    - '{{host_users}}'
    - '{{extra_users}}'

  when: ((item.name is defined and item.name and item.name != 'root') and (item.state is undefined or (item.state is defined and item.state != 'absent')) and item.sudo_user)

- name: Add admin_user group as NOPASSWORD sudoers
  action: lineinfile dest=/etc/sudoers
          line='{{item.username}} ALL=(ALL:ALL) NOPASSWD:ALL'
          insertafter='EOF'
          state=present
          validate='visudo -cf %s'
  with_flattened:
    - '{{default_users}}'
    - '{{group_users}}'
    - '{{host_users}}'
    - '{{extra_users}}'

  when: ((item.name is defined and item.name and item.name != 'root') and
         (item.state is undefined or (item.state is defined and item.state != 'absent')) and
          item.sudo_user)
  tags: users


- name: SSH keys
  authorized_key: user='{{item.username}}' key='{{'\n'.join(item.ssh_keys) | string}}'
  with_flattened:
    - '{{default_users}}'
    - '{{group_users}}'
    - '{{host_users}}'
    - '{{extra_users}}'
  when: ((item.name is defined and item.name and item.name != 'root') and
         (item.state is undefined or (item.state is defined and item.state != 'absent')) and
         (item.ssh_keys is defined and item.ssh_keys))

  tags: ['users','configuration', 'user_current']

- name: Deleted per-user group removal
  group: name='{{item.username}}' state=absent
  with_flattened:
    - '{{default_users}}'
    - '{{group_users}}'
    - '{{host_users}}'
    - '{{extra_users}}'

  when: ((item.name is defined and item.name and item.name != 'root') and
         (item.state is defined and item.state == 'absent'))

  tags: ['users','configuration']