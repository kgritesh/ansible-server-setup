---
#   Copyright Red Hat, Inc. All Rights Reserved.
#
#   Licensed under the Apache License, Version 2.0 (the "License"); you may
#   not use this file except in compliance with the License. You may obtain
#   a copy of the License at
#
#       http://www.apache.org/licenses/LICENSE-2.0
#
#   Unless required by applicable law or agreed to in writing, software
#   distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
#   WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
#   License for the specific language governing permissions and limitations
#   under the License.
#
#   Author: David Moreau Simard <dms@redhat.com>

# ansible_port can change throughout this role, keep a copy around
- name: Set configured port fact
  set_fact:
    configured_port: "{{ ansible_port }}"
    configured_user: "{{ ansible_user }}"

# From localhost, check if we're able to reach {{ inventory_hostname }} on
# port 22
- name: Check if we're using the default SSH port
  wait_for:
    port: "22"
    state: "started"
    host: "{{ hostvars[inventory_hostname]['ansible_host'] }}"
    connect_timeout: "5"
    timeout: "5"
  delegate_to: "localhost"
  ignore_errors: "yes"
  register: default_ssh

# If reachable, continue the following tasks with this port
- name: Set inventory ansible_port, ansible user and server setup to default
  set_fact:
    ansible_port: "22"
    ansible_user: "{{ default_user }}"
    ansible_ssh_port: "22"
    ansible_ssh_user: "{{ default_user }}"
    default_ssh_configured: True
    host_key_checking: False
    server_setup: True
  when: default_ssh is defined and default_ssh.state == "started"
  register: ssh_port_set

# If unreachable on port 22, check if we're able to reach
# {{ inventory_hostname }} on {{ ansible_port }} provided by the inventory
# from localhost
- name: Check if we're using the inventory-provided SSH port
  wait_for:
    port: "{{ ansible_port }}"
    state: "started"
    host: "{{ hostvars[inventory_hostname]['ansible_host'] }}"
    connect_timeout: "5"
    timeout: "10"
  delegate_to: "localhost"
  ignore_errors: "yes"
  register: configured_ssh
  when: default_ssh is defined and default_ssh.state is undefined

- name:
  debug: var={{configured_ssh}}

- name: If Using inventory-provided SSH port then disable server setup
        as most likely server is already setup
  set_fact:
      server_setup: False
  when: configured_ssh is defined and configured_ssh.state is defined and
          configured_ssh.state == "started"

# If {{ ansible_port }} is reachable, we don't need to do anything special
- name: SSH port is configured properly
  debug:
    msg: "SSH port is configured properly to {{ansible_ssh_port}}"
  when: configured_ssh is defined and configured_ssh.state is defined and
        configured_ssh.state == "started"
  register: ssh_port_set

# If the SSH port is neither the default or the configured, give up.
- name: Fail if SSH port was not auto-detected (unknown)
  fail:
    msg: "The SSH port is neither 22 or {{ ansible_port }}."
  when: ssh_port_set is undefined

